<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>hardly2333's Blog</title><link>https://hardly2333.github.io</link><description>^_^</description><copyright>hardly2333's Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/182357152?v=4</url><title>avatar</title><link>https://hardly2333.github.io</link></image><lastBuildDate>Sun, 20 Oct 2024 13:02:23 +0000</lastBuildDate><managingEditor>hardly2333's Blog</managingEditor><ttl>60</ttl><webMaster>hardly2333's Blog</webMaster><item><title>BLOG FOR 2024-10-20</title><link>https://hardly2333.github.io/post/BLOG%20FOR%202024-10-20.html</link><description># 数学分析&#13;
&lt;p&gt;数列极限和函数极限证明极限的关键都在于找到与ε相关的N/δ，而数列中先确定n范围的做法在函数中表现为确定x关于x0的一个区间（绝对值）处理&lt;/p&gt;&#13;
&#13;
# 线代&#13;
&lt;p&gt;暂无&lt;/p&gt;&#13;
&#13;
# CS50x&#13;
看了WEEK0，其中讲了几个重要观点：&#13;
1. 函数的本质在于 输入INPUT 通过算法的处理 输出OUTPUT我们需要的&#13;
2. 在处理代码要有“抽象化”的思维，思考能不能把一个程序抽象成若干功能、某一功能能不能用更简单（容易量化?）的方法实现。</description><guid isPermaLink="true">https://hardly2333.github.io/post/BLOG%20FOR%202024-10-20.html</guid><pubDate>Sun, 20 Oct 2024 13:01:59 +0000</pubDate></item><item><title>vars , constants and store(?</title><link>https://hardly2333.github.io/post/vars%20%2C%20constants%20and%20store%28-.html</link><description># Vars&#13;
C中变量仅能储存数值，共分为两类 int and real，定义变量需声明类型（不可省略&#13;
int&#13;
类型包括char short int long 范围从小到大&#13;
若在前面加上unsigned 则说明“无符号”，即非负数&#13;
real&#13;
单精度float 双精度double 长双精度long double&#13;
float六位 double十五位&#13;
但随之运行效率也会降低，应视情况考虑&#13;
Q1: 定义float后运算进行不正常？&#13;
eg&#13;
```C&#13;
float A=5 , B=8 , C;&#13;
C = A*B;&#13;
printf('%f', &amp;C);&#13;
```&#13;
输出结果却是0 ???=-(&#13;
## 变量的定义和初始化规则&#13;
对于第一次声明变量，可以赋值，但不能连等赋值&#13;
eg&#13;
正确例子&#13;
` int i , j; `   &#13;
` char i=7 `&#13;
` double i=7, j=7 `&#13;
错误例子&#13;
` short i=j=10 `&#13;
然而在声明之后可以连等&#13;
eg ` i=j=10 `&#13;
此时先进行右边运算-将10赋给j，再把j的值赋给i&#13;
`i = j * j`&#13;
此时也是先右边j乘j，再赋值&#13;
也就是说，第一个等号是'最后'优先级的。</description><guid isPermaLink="true">https://hardly2333.github.io/post/vars%20%2C%20constants%20and%20store%28-.html</guid><pubDate>Tue, 24 Sep 2024 15:48:29 +0000</pubDate></item><item><title>Markdown practise</title><link>https://hardly2333.github.io/post/Markdown%20practise.html</link><description># 一级标题&#13;
## 二级标题&#13;
### 三级标题&#13;
&gt;__ __this is not a quote actually__ __&#13;
~~As you can see~~&#13;
**_Enjoy_ Your Weekend!**&#13;
&#13;
This is my [BLOG](https://hardly2333.github.io/).&#13;
`printf('Hello-world');`&#13;
```C&#13;
printf('Hello world');&#13;
```&#13;
![无标题](https://github.com/user-attachments/assets/5183bd9a-8aad-416e-b238-05bc6e7c0b3d)&#13;
&#13;
。</description><guid isPermaLink="true">https://hardly2333.github.io/post/Markdown%20practise.html</guid><pubDate>Sun, 22 Sep 2024 02:24:21 +0000</pubDate></item><item><title>TEST</title><link>https://hardly2333.github.io/post/TEST.html</link><description>hello-world。</description><guid isPermaLink="true">https://hardly2333.github.io/post/TEST.html</guid><pubDate>Sun, 22 Sep 2024 01:56:36 +0000</pubDate></item></channel></rss>